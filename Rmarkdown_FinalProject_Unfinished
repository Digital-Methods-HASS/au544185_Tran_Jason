---
  title: "Final Project"
author: "Jason Tran"
date: "25/12/2020"
output: html_document
---
  
  ```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

#  Explore the immigration from Chinese-speaking countries to Denmark with data from Danmarks Statistik

**Your task: Use the guide given by Adela in week 5 of 'Digital Methods' to explore the data and visualize it in both static and animated ways, providing answers and solutions to 7 questions/tasks below. I will follow the guide very strictly by basically stealing the whole process from start to finish with my own notes on what I'm doing.**
  
  ## Get the necessary packages
  First, start with installing the relevant packages 'tidyverse','gganimate' and 'ggplot2' and read the relevant csv-files or xls-files in my case.


#But first I want to setup the working directory. I used this
```{r}
setwd("C:/Users/User/Desktop/Skole/E20/Teoriorienteret metode/del 2/Opgaveskrivning")
```


#Now I install all the neccessary packages. I am not sure how the ggplot2 is used, since we didn't really use it in the finshed one as far as I know. In the example Adela showed in class it was just 'ggplot'. The first 4 are packages to be used later, and everything afterwards are the .xls-files I retrieved from Danmarks Statistik for this assignment in covering the immigration from Chinese-speaking countires to Denmark
```{r libraries, echo = FALSE}
library(tidyverse)
library(gganimate)
library(ggplot2)
library(readxl)
Causes_1997_2019 <- read_excel("OpenRefined/Causes_1997-2019.xls")
View(Causes_1997_2019)
Statsborgerskab_1980_2019 <- read_excel("OpenRefined/Statsborgerskab_1980-2019.xls")
View(Statsborgerskab_1980_2019)
Indvandring_Udenlandsk_Statsborgerskab_1980_2019 <- read_excel("OpenRefined/Indvandring_Udenlandsk_Statsborgerskab_1980-2019.xls")
View(Indvandring_Udenlandsk_Statsborgerskab_1980_2019)
Indvandring_HongKong_1980_2019 <- read_excel("OpenRefined/Indvandring_HongKong_1980-2019.xls")
View(Indvandring_HongKong_1980_2019)
Skiftet_Statsborgerskab_1979_2019 <- read_csv("OpenRefined/Skiftet_Statsborgerskab_1979-2019.csv")
View(Skiftet_Statsborgerskab_1979_2019)
```



## Look at the data
First, see which specific years are actually represented in the dataset and what variables are being recorded for each country. Note that when you run the cell below, Rmarkdown will give you two results - one for each line - that you can flip between.
```{r}
unique(Causes_1997_2019$Immigrants) #kan også være de andre .xls-filer og deres kolonner
head(Causes_1997_2019)
tail(Causes_1997_2019)
```
The dataset contains information on "Country", "Gender", "Cause of Immigration", "Year" and number of "Immigrants".
#Now I want to make them actual vectors that I can use in a ggplot.
```{r Causes_1997_2019}
Cause_immigration <- Causes_1997_2019$`Cause of Immigration` 
Cause_Immigrants <- Causes_1997_2019$Immigrants
Cause_Year <- Causes_1997_2019$Year
Cause_Country <- Causes_1997_2019$Country
```


Let's plot all the countries according to Cause of Immigration.
```{r Causes_1997_2019}
ggplot(subset(Causes_1997_2019), aes(x = Cause_Year, y = Cause_Immigrants))+
  scale_x_log10() +
  geom_jitter(alpha = 0.7, aes(color = Cause_Country))+
  labs(title = "Causes of Immigration", x = "Year", y = "Immigrants")
```

```{r Causes_1997_2019}
#Den her fungerer bedre. Stjålet fra guiden. FANTASTISK til at vise de forskellige lande, og grundene til de forskellige landes immigration!!! HUSK at det er et boxplot, så den viser median, gennemsnit og kvarterne. Jeg skal måske oversætte begreberne til engelsk.
Causes_1997_2019 %>% 
   ggplot(aes(x = Cause_Country, y = Cause_Immigrants, color = Cause_immigration)) +
  geom_boxplot() +
  labs(title = "Causes of Immigration", x = "Country of origin", y = "Immigrants")
```
```{r Causes_1997_2019}
#Nu med lande som kasser og årsager som x-akse
Causes_1997_2019 %>% 
   ggplot(aes(x = Cause_immigration, y = Cause_Immigrants, color = Cause_Country)) +
  geom_boxplot() +
  labs(title = "Causes by country", x = "Cause", y = "Immigrants")
```
```{r Statsborgerskab_1980-2019}
Citizenship <- Statsborgerskab_1980_2019$`Citizenship`
Citizenship_Immigrants <-Statsborgerskab_1980_2019$Immigrants
Citizenship_Year <- Statsborgerskab_1980_2019$Year
Citizenship_Country <- Statsborgerskab_1980_2019$Country
```


```{r Statsborgerskab_1980_2019}
g <- theme_set(theme_bw())  # set theme to white background for better visibility
ggplot(subset(Statsborgerskab_1980_2019), aes(Citizenship_Year, Citizenship_Immigrants))+
  scale_x_log10() +
  geom_jitter(alpha = 0.5, aes(color = Citizenship))+
  labs(title = "Citizenship of Immigrants", x = "Year", y = "Immigrants")
```
#Barplots are also useful for visualizing categorical data. By default, geom_bar accepts a variable for x, and plots the number of instances each value of x (in this case, wall type) appears in the dataset.
```{r Statsborgerskab_1980_2019}
Statsborgerskab_1980_2019 %>%
  ggplot(aes(x = Citizenship_Country, y = Citizenship_Immigrants, color = Citizenship)) +
  geom_boxplot()+
  labs(title = "Citizenship", x = "Immigrants", x = "Country")
```
```{r Statsborgerskab_1980_2019}
#Nu omvendt, hvor det er kategoriseret som dansk og udenlandsk statsborgerskab med landene som farver
Statsborgerskab_1980_2019 %>%
  ggplot(aes(x = Citizenship, y = Citizenship_Immigrants, color = Citizenship_Country)) +
  geom_boxplot()+
  labs(title = "Citizenship", x = "Immigrants", x = "Country")
```
```{r Statsborgerskab_1980_2019}
#Nu kategoriseret efter køn og  med landene som farver
Statsborgerskab_1980_2019 %>%
  ggplot(aes(x = `Indvandring efter køn, statsborgerskab, indvandringsland og tid`, y = Citizenship_Immigrants, color = Citizenship_Country)) +
  geom_boxplot()+
  labs(title = "Citizenship", x = "Immigrants", x = "Country")
```

```{r Skiftet_Statsborgerskab_1979_2019}
Switched_Gender <- Skiftet_Statsborgerskab_1979_2019$`Personer, der har skiftet til dansk statsborgerskab efter køn, tidligere statsborgerskab og tid` 
Switched_Immigrants <- Skiftet_Statsborgerskab_1979_2019$Immigrants
Switched_Year <- Skiftet_Statsborgerskab_1979_2019$Year
Switched_Country <- Skiftet_Statsborgerskab_1979_2019$Country
```

```{r Skiftet_Statsborgerskab_1979_2019}
theme_set(theme_bw())  # set theme to white background for better visibility
ggplot(subset(Skiftet_Statsborgerskab_1979_2019), aes(Switched_Year, Switched_Immigrants))+
  scale_x_log10() +
  geom_jitter(alpha = 0.5, aes(color = Switched_Country))+
  labs(title = "Changed Citizenship", x = "Year", y = "Immigrants")
```
```{r}
Skiftet_Statsborgerskab_1979_2019 %>%
  ggplot(aes(x= `Personer, der har skiftet til dansk statsborgerskab efter køn, tidligere statsborgerskab og tid`, y = Immigrants, color = Country)) +
  geom_boxplot()+
  labs(title = "Changed Citizenship", x = "Gender", x = "Country")
```

```{r Indvandring_Udenlandsk_Statsborgerskab_1980_2019}
#Den her er KUN udenlandske statsborgere. Samme som Statsborgerskab_1980-2019 bare uden danske statsborgere
Foreign_Gender <- Indvandring_Udenlandsk_Statsborgerskab_1980_2019$Gender 
Foreign_Immigrants <- Indvandring_Udenlandsk_Statsborgerskab_1980_2019$Immigrants
Foreign_Year <- Indvandring_Udenlandsk_Statsborgerskab_1980_2019$Year
Foreign_Country <- Indvandring_Udenlandsk_Statsborgerskab_1980_2019$Country
```

```{r Indvandring_Udenlandsk_Statsborgerskab_1980_2019}
theme_set(theme_bw())  # set theme to white background for better visibility
ggplot(subset(Indvandring_Udenlandsk_Statsborgerskab_1980_2019), aes(Foreign_Year, Foreign_Immigrants))+
  geom_jitter(alpha = 0.5, aes(color = Foreign_Country))+
  labs(title = "Foreign Citizenship Immigrants", x = "Year", y = "Immigrants")
```
```{r}
Indvandring_Udenlandsk_Statsborgerskab_1980_2019 %>%
  ggplot(aes(x= Gender, y = Immigrants, color = Country)) +
  geom_boxplot()+
  labs(title = "Foreign citizenship", x = "Gender", x = "Country")
```

#I don't know how to remove the zeroes. Something with omit.na, maybe but who knows.

##  Make it move!

The first step is to create the object-to-be-animated
```{r anim Causes}
Causes_anim <- Causes_1997_2019 %>%
  ggplot(aes(x = Country, y = Immigrants, color = `Cause of Immigration`)) +
  geom_boxplot()+
  transition_time(Year)
  labs(title = "Causes of Immigration", x = "Country of origin", y = "Immigrants")
anim
```
```{r anim Causes}
Causes_anim + transition_states(Year, transition_length = 1, state_length = 1)+
  labs(title = "Causes for immigration in {closest_state}", x = "Country", y = "Immigrants")
```
```{r anim Citizenship}
Citizenship_anim <- Statsborgerskab_1980_2019 %>% 
  ggplot(aes(x = Citizenship, y = Immigrants, color = Country))+
  geom_boxplot()+
  transition_time(Year)+
  labs (title = "Citizenship in Year", x = "Citizenship", y = "Immigrants")
```
```{r anim Citizenship}
Citizenship_anim + transition_states(Year, transition_length = 1, state_length = 1)+
  labs(title = "Citizenship in {closest_state}", x = "Citizenship", y = "Immigrants")
```
```{r anim Switched}
Switched_anim <- Skiftet_Statsborgerskab_1979_2019 %>% 
  ggplot(aes(x = `Personer, der har skiftet til dansk statsborgerskab efter køn, tidligere statsborgerskab og tid`, y = Immigrants, color = Country))+
  geom_boxplot()+
  transition_time(Year)+
  labs (title = "Switched citizenship", x = "Gender", y = "Immigrants")
```
```{r anim Switched}
Switched_anim + transition_states(Year, transition_length = 1, state_length = 1)+
  labs(title = "Citizenship in {closest_state}", x = "Citizenship", y = "Immigrants")
```
```{r anim Foreign Citizenship}
#This is showing the course over year
Foreign_Citizenship_anim <- Indvandring_Udenlandsk_Statsborgerskab_1980_2019 %>%
  ggplot(aes(x= Gender, y = Immigrants, color = Country)) +
  geom_count ()+
  transition_time(Year)+
  labs(title = "Foreign Citizenship in {closest_state}", x = "Gender", y = "Immigrants")
anim
```
```{r anim Foreign Citizenship}
#This is switching between gender and shows x = year
Foreign_Citizenship_anim <- Indvandring_Udenlandsk_Statsborgerskab_1980_2019 %>%
  ggplot(aes(x= Year, y = Immigrants, color = Country)) +
  geom_count ()+
  transition_time(Gender)+
  labs(title = "Foreign Citizenship in {closest_state}", x = "Gender", y = "Immigrants")
anim
```
```{r anim Foreign Citizenship}
Foreign_Citizenship_anim + transition_states(Gender, transition_length = 1, state_length = 1)+
  labs (title = "Foreign Citizenship in {closest_state}", x = "Gender", x = "Country")
```
